TestSet
# Tahap 5 : Feature scalling
TraningSet[, 2:3] = scale(TraningSet[, 2:3])
TestSet[, 2:3] = scale(TestSet[, 2:3])
TraningSet
TestSet
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
# tahap 3 : Categorical Data
# dataset$Country = factor(dataset$Country,
#                      levels = c('France', 'Spain', 'Germany'),
#                      labels = c(1.0, 2.0, 3.0))
# dataset$Purchased = factor(dataset$Purchased,
#                           levels = c('No', 'Yes'),
#                           labels = c(0, 1))
# dataset$Purchased[is.na(dataset$Purchased)] <- 0
# as.factor(dataset$Purchased)
# str(dataset)
# dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('Yes', 'No'))
dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
library(cleandata)
# tahap 3 : Categorical Data
# dataset$Country = factor(dataset$Country,
#                      levels = c('France', 'Spain', 'Germany'),
#                      labels = c(1.0, 2.0, 3.0))
# dataset$Purchased = factor(dataset$Purchased,
#                           levels = c('No', 'Yes'),
#                           labels = c(0, 1))
# dataset$Purchased[is.na(dataset$Purchased)] <- 0
# as.factor(dataset$Purchased)
# str(dataset)
# dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
knitr::opts_chunk$set(echo = TRUE)
#import library
library(dplyr)
library(caTools)
library(cleandata)
# Tahap 1 : Import data
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset
# Tahap 2 : Menghandling missing data
# Mengecek Missing Value
MissingValue <- sapply(dataset, function(x) sum(is.na(x)))
MissingValue
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function (x)mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function (x)mean(x, na.rm = TRUE)),
dataset$Salary)
dataset
# tahap 3 : Categorical Data
# dataset$Country = factor(dataset$Country,
#                      levels = c('France', 'Spain', 'Germany'),
#                      labels = c(1.0, 2.0, 3.0))
# dataset$Purchased = factor(dataset$Purchased,
#                           levels = c('No', 'Yes'),
#                           labels = c(0, 1))
# dataset$Purchased[is.na(dataset$Purchased)] <- 0
# as.factor(dataset$Purchased)
# str(dataset)
# dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
# Tahap 4 : Splitting  dataset menjadi training set dan test set
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
TraningSet = subset(dataset, split == TRUE)
TestSet = subset(dataset, split == FALSE)
TraningSet
TestSet
# Tahap 5 : Feature scalling
TraningSet[, 2:3] = scale(TraningSet[, 2:3])
TestSet[, 2:3] = scale(TestSet[, 2:3])
TraningSet
TestSet
# tahap 3 : Categorical Data
# dataset$Country = factor(dataset$Country,
#                      levels = c('France', 'Spain', 'Germany'),
#                      labels = c(1.0, 2.0, 3.0))
# dataset$Purchased = factor(dataset$Purchased,
#                           levels = c('No', 'Yes'),
#                           labels = c(0, 1))
# dataset$Purchased[is.na(dataset$Purchased)] <- 0
# as.factor(dataset$Purchased)
# str(dataset)
# dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
# tahap 3 : Categorical Data
# dataset$Country = factor(dataset$Country,
#                      levels = c('France', 'Spain', 'Germany'),
#                      labels = c(1.0, 2.0, 3.0))
# dataset$Purchased = factor(dataset$Purchased,
#                           levels = c('No', 'Yes'),
#                           labels = c(0, 1))
# dataset$Purchased[is.na(dataset$Purchased)] <- 0
# as.factor(dataset$Purchased)
# str(dataset)
# dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
# tahap 3 : Categorical Data
# dataset$Country = factor(dataset$Country,
#                      levels = c('France', 'Spain', 'Germany'),
#                      labels = c(1.0, 2.0, 3.0))
# dataset$Purchased = factor(dataset$Purchased,
#                           levels = c('No', 'Yes'),
#                           labels = c(0, 1))
# dataset$Purchased[is.na(dataset$Purchased)] <- 0
# as.factor(dataset$Purchased)
# str(dataset)
# dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
dataset <- data.frame(dataset)
dataset
knitr::opts_chunk$set(echo = TRUE)
#import library
library(dplyr)
library(caTools)
library(cleandata)
# Tahap 1 : Import data
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
# Tahap 2 : Menghandling missing data
# Mengecek Missing Value
MissingValue <- sapply(dataset, function(x) sum(is.na(x)))
MissingValue
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function (x)mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function (x)mean(x, na.rm = TRUE)),
dataset$Salary)
dataset
# tahap 3 : Categorical Data
# dataset$Country = factor(dataset$Country,
#                      levels = c('France', 'Spain', 'Germany'),
#                      labels = c(1.0, 2.0, 3.0))
# dataset$Purchased = factor(dataset$Purchased,
#                           levels = c('No', 'Yes'),
#                           labels = c(0, 1))
# dataset$Purchased[is.na(dataset$Purchased)] <- 0
# as.factor(dataset$Purchased)
# str(dataset)
# dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
# Tahap 4 : Splitting  dataset menjadi training set dan test set
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
TraningSet = subset(dataset, split == TRUE)
TestSet = subset(dataset, split == FALSE)
TraningSet
TestSet
# Tahap 5 : Feature scalling
TraningSet[, 2:3] = scale(TraningSet[, 2:3])
TestSet[, 2:3] = scale(TestSet[, 2:3])
TraningSet
TestSet
# encoding
df[, 1:2] <- encode_ordinal(df[,1:2], order = c('x', 'y', 'z'))
df[, 3] <- encode_ordinal(df[, 3, drop = FALSE], order = c('i', 'j', 'k'))
print(df)
# building a data frame
A <- as.factor(c('y', 'z', 'x', 'y', 'z'))
B <- as.factor(c('y', 'x', 'z', 'z', 'x'))
C <- as.factor(c('k', 'i', 'i', 'j', 'k'))
df <- data.frame(A, B, C)
df
# Tahap 1 : Import data
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
# tahap 3 : Categorical Data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1.0, 2.0, 3.0))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(1, 2))
# dataset$Purchased[is.na(dataset$Purchased)] <- 0
as.factor(dataset$Purchased)
str(dataset)
dataset
# dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
# dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
# dataset
# tahap 3 : Categorical Data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1.0, 2.0, 3.0))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(1, 2))
dataset$Purchased[is.na(dataset$Purchased)] <- 0
as.factor(dataset$Purchased)
str(dataset)
dataset
# dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
# dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
# dataset
# Tahap 1 : Import data
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
# tahap 3 : Categorical Data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1.0, 2.0, 3.0))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(1, 2))
dataset$Purchased[is.na(dataset$Purchased)] <- 0
as.factor(dataset$Purchased)
str(dataset)
dataset
# dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
# dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
# dataset
# tahap 3 : Categorical Data
# dataset$Country = factor(dataset$Country,
#                      levels = c('France', 'Spain', 'Germany'),
#                      labels = c(1.0, 2.0, 3.0))
#
# dataset$Purchased = factor(dataset$Purchased,
#                           levels = c('No', 'Yes'),
#                           labels = c(1, 2))
# dataset$Purchased[is.na(dataset$Purchased)] <- 0
# as.factor(dataset$Purchased)
# str(dataset)
# dataset
# dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
# dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
# dataset
# tahap 3 : Categorical Data
# dataset$Country = factor(dataset$Country,
#                      levels = c('France', 'Spain', 'Germany'),
#                      labels = c(1.0, 2.0, 3.0))
#
# dataset$Purchased = factor(dataset$Purchased,
#                           levels = c('No', 'Yes'),
#                           labels = c(1, 2))
# dataset$Purchased[is.na(dataset$Purchased)] <- 0
# as.factor(dataset$Purchased)
# str(dataset)
# dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
knitr::opts_chunk$set(echo = TRUE)
#import library
library(dplyr)
library(caTools)
library(cleandata)
# Tahap 1 : Import data
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
# Tahap 2 : Menghandling missing data
# Mengecek Missing Value
MissingValue <- sapply(dataset, function(x) sum(is.na(x)))
MissingValue
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function (x)mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function (x)mean(x, na.rm = TRUE)),
dataset$Salary)
dataset
# tahap 3 : Categorical Data
# dataset$Country = factor(dataset$Country,
#                      levels = c('France', 'Spain', 'Germany'),
#                      labels = c(1.0, 2.0, 3.0))
#
# dataset$Purchased = factor(dataset$Purchased,
#                           levels = c('No', 'Yes'),
#                           labels = c(1, 2))
# dataset$Purchased[is.na(dataset$Purchased)] <- 0
# as.factor(dataset$Purchased)
# str(dataset)
# dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
# Tahap 4 : Splitting  dataset menjadi training set dan test set
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
TraningSet = subset(dataset, split == TRUE)
TestSet = subset(dataset, split == FALSE)
TraningSet
TestSet
# Tahap 5 : Feature scalling
TraningSet[, 2:3] = scale(TraningSet[, 2:3])
TestSet[, 2:3] = scale(TestSet[, 2:3])
TraningSet
TestSet
dataset
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset$Purchased <- encode_ordinal(dataset[Purchased, drop = FALSE], order = c('No', 'Yes'))
source('~/.active-rstudio-document', echo=TRUE)
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset
dataset$Purchased <- encode_ordinal(dataset[Purchased], order = c('No', 'Yes'))
dataset$Purchased <- encode_ordinal(dataset$Purchased, order = c('No', 'Yes'))
dataset
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
table(dataset[["Country"]],
table(dataset[["Country"]],
encode_ordinal(dataset[["Country"]], order = c('France', 'Spain', 'Germany')),
useNA = "ifany")
dataset
table(dataset[["Country"]],
encode_ordinal(dataset[["Country"]], order = c('France', 'Spain', 'Germany')))
dataset$Country <- encode_ordinal(dataset$Country, order = c('France', 'Spain', 'Germany'))
dataset
table(dataset[["Country"]],
encode_ordinal(dataset[["Country"]], order = c('France', 'Spain', 'Germany')))
dataset
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
table(dataset[["Country"]],
encode_ordinal(dataset[["Country"]], order = c('France', 'Spain', 'Germany')))
table(dataset[["Purchased"]],
encode_ordinal(dataset[["Purchased"]], order = c('No', 'Yes')))
# one-hot
# building a data frame
A <- as.factor(c('x', 'y', 'x'))
B <- as.factor(c('i', 'j', 'k'))
df <- data.frame(A, B)
df
# encoding
df0 <- encode_onehot(df)
df0 <- cbind(df, df0)
print(df0)
df0 <- encode_onehot(df, colname.sep = '-', drop1st = TRUE)
df0 <- cbind(df, df0)
rm(df)
print(df0)
B <- as.factor(c('i', 'j', 'k'))
df <- data.frame(A, B)
df
# encoding
df0 <- encode_onehot(df)
df0 <- cbind(df, df0)
print(df0)
# Onehot Encoding
df0 <- encode_onehot(dataset$Country)
df0 <- cbind(dataset$Country, df0)
print(df0)
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
# one-hot
# building a data frame
A <- as.factor(c('x', 'y', 'x'))
B <- as.factor(c('i', 'j', 'k'))
df <- data.frame(A, B)
df
# encoding
df0 <- encode_onehot(df)
df0 <- cbind(df, df0)
# Onehot Encoding
df1 <- encode_onehot(dataset)
df1 <- cbind(dataset, df0)
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
# Onehot Encoding
df1 <- encode_onehot(dataset)
# Onehot Encoding
df1 <- encode_onehot(dataset$Country)
print(df1)
# one-hot
# building a data frame
A <- as.factor(c('x', 'y', 'x'))
B <- as.factor(c('i', 'j', 'k'))
df <- data.frame(A, B)
df
# encoding
df0 <- encode_onehot(df)
df0 <- encode_onehot(df, colname.sep = '-', drop1st = TRUE)
library(mltools)
install.packages("mltools")
install.packages("data.table")
library(mltools)
library(data.table)
set.seed(555)
data01 <- data.frame(ID = seq(1,100,by=1),
Colour = sample(c("Red","Green","Blue"), 100, replace = TRUE),
Quality = sample(c("Poor","Average","Good"), 100, replace = TRUE)
)
data01
newdata <- one_hot(as.data.table(data01))
newdata
newdata <- one_hot(as.data.table(data01))
newdata
data01 <- data.frame(ID = seq(1,100,by=1),
Colour = sample(c("Red","Green","Blue"), 100, replace = TRUE),
Quality = sample(c("Poor","Average","Good"), 100, replace = TRUE)
)
data01
dummy <- dummyVars(" ~ .", data=data01)
library(caret)
dummy <- dummyVars(" ~ .", data=data01)
newdata <- data.frame(predict(dummy, newdata = data01))
newdata
newdata <- one_hot(as.data.table(data01))
newdata
data01 <- data.frame(ID = seq(1,100,by=1),
Colour = sample(c("Red","Green","Blue"), 100, replace = TRUE),
Quality = sample(c("Poor","Average","Good"), 100, replace = TRUE)
)
newdata <- one_hot(as.data.table(data01))
newdata
customers <- data.frame(
id=c(10, 20, 30, 40, 50),
gender=c('male', 'female', 'female', 'male', 'female'),
mood=c('happy', 'sad', 'happy', 'sad','happy'),
outcome=c(1, 1, 0, 0, 0))
customers_1h <- one_hot(as.data.table(customers))
customers
customers_1h
library(mltools)
library(data.table)
customers <- data.frame(
id=c(10, 20, 30, 40, 50),
gender=c('male', 'female', 'female', 'male', 'female'),
mood=c('happy', 'sad', 'happy', 'sad','happy'),
outcome=c(1, 1, 0, 0, 0))
customers_1h <- one_hot(as.data.table(customers))
customers_1h
customers_1h
library(mltools)
library(data.table)
customers <- data.frame(
id=c(10, 20, 30, 40, 50),
gender=c('male', 'female', 'female', 'male', 'female'),
mood=c('happy', 'sad', 'happy', 'sad','happy'),
outcome=c(1, 1, 0, 0, 0))
customers_1h <- one_hot(as.data.table(customers))
customers_1h
set.seed(555)
data01 <- data.frame(ID = seq(1,100,by=1),
Colour = sample(c("Red","Green","Blue"), 100, replace = TRUE),
Quality = sample(c("Poor","Average","Good"), 100, replace = TRUE)
)
data01
# dummyVars
library(caret)
dummy <- dummyVars(" ~ .", data=data01)
newdata <- data.frame(predict(dummy, newdata = data01))
newdata
customers_1h <- one_hot(customers)
customers_1h
customers <- data.table(
id=c(10, 20, 30, 40, 50),
gender=c('male', 'female', 'female', 'male', 'female'),
mood=c('happy', 'sad', 'happy', 'sad','happy'),
outcome=c(1, 1, 0, 0, 0))
customers_1h <- one_hot(customers)
customers_1h
# Onehot Encoding
df1 <- encode_onehot(dataset$Country)
# Onehot Encoding
df1 <- encode_onehot(dataset)
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
dummy <- dummyVars(" ~ .", data=dataset)
newdata <- data.frame(predict(dummy, newdata = dataset))
newdata
t
t
dataset <- read.csv("C:/Users/Hp/Downloads/Dataset/Dataset.csv", header = TRUE)
dataset <- data.frame(dataset)
dataset
one_hot(dataset)
source('~/.active-rstudio-document', echo=TRUE)
dummy <- dummyVars(" ~ .", data=dataset)
newdata <- data.frame(predict(dummy, newdata = dataset))
newdata
